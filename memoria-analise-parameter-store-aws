# Template para Projetos de An√°lise de AWS Parameter Store

## üìã **Especifica√ß√£o Base**
Criar ferramenta Python para an√°lise e exporta√ß√£o de par√¢metros do AWS Systems Manager Parameter Store com m√∫ltiplos filtros e exporta√ß√£o CSV estruturada.

## üéØ **Funcionalidades Essenciais**

### **1. Conectividade AWS**
- Suporte a credenciais via vari√°veis de ambiente (.env)
- M√∫ltiplas regi√µes AWS configur√°veis
- Valida√ß√£o de credenciais com diagn√≥stico detalhado
- Tratamento de erros de conectividade

### **2. Sistema de Filtros (3 N√≠veis)**
- **PARAMETER_PREFIXES**: Filtro por nome do par√¢metro (ex: "apisettings")
- **FILTER_KEYS**: Filtro por chaves espec√≠ficas dentro do valor JSON/Properties
- **CONTENT_FILTER**: Filtro LIKE por qualquer conte√∫do no valor (case-insensitive)

### **3. Exporta√ß√£o CSV Inteligente**
- **Modo Filtrado**: Colunas din√¢micas baseadas em FILTER_KEYS
- **Modo Completo**: Coluna ParameterValue com valor completo
- Arquivo √∫nico consolidado com timestamp
- Coluna Region para identificar origem
- Escape de caracteres especiais (quebras de linha)

### **4. Parsing de Valores**
- Suporte a JSON estruturado
- Suporte a formato Properties/ENV (key=value)
- Extra√ß√£o individual de chaves para colunas separadas
- Tratamento de valores complexos e aninhados

## üîß **Arquitetura T√©cnica**

### **Estrutura de Classes**
```python
class ParameterStoreAnalyzer:
    - Configura√ß√£o via .env
    - M√©todos de parsing para cada tipo de filtro
    - Cliente SSM por regi√£o
    - Exporta√ß√£o CSV consolidada
    - Logging detalhado
```

### **Fluxo de Processamento**
1. Valida√ß√£o de credenciais AWS
2. Itera√ß√£o por regi√µes configuradas
3. Aplica√ß√£o sequencial de filtros:
   - Prefixos de par√¢metros
   - Filtro de conte√∫do geral
   - Filtro de chaves espec√≠ficas
4. Consolida√ß√£o de resultados
5. Exporta√ß√£o CSV √∫nica

### **Configura√ß√£o (.env)**
```env
# Credenciais AWS
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_SESSION_TOKEN=
AWS_DEFAULT_REGION=us-east-1

# Regi√µes para an√°lise
AWS_REGIONS=us-east-1,sa-east-1

# Filtros (todos opcionais)
PARAMETER_PREFIXES=apisettings
FILTER_KEYS=AWS_ACCESS_KEY_ID,DATABASE_URL
CONTENT_FILTER=prod.cloud.laqus.com.br
```

## üìä **Formato de Sa√≠da CSV**

### **Colunas Base (sempre presentes)**
- Region
- ParameterName  
- Type
- LastModifiedDate
- Version

### **Colunas Din√¢micas (conforme filtros)**
- **Com FILTER_KEYS**: Uma coluna por chave filtrada
- **Sem FILTER_KEYS**: Coluna ParameterValue com conte√∫do completo

## üöÄ **Casos de Uso T√≠picos**

### **Auditoria de Seguran√ßa**
```env
CONTENT_FILTER=password
# ou
CONTENT_FILTER=AKIA
```

### **Mapeamento de URLs por Ambiente**
```env
CONTENT_FILTER=prod.cloud.laqus.com.br
# ou
CONTENT_FILTER=.hml.cloud.laqus.com.br
```

### **Invent√°rio de Conex√µes de Banco**
```env
CONTENT_FILTER=mysql
# ou
FILTER_KEYS=ConnectionString,DatabaseUrl
```

### **An√°lise de Configura√ß√µes Espec√≠ficas**
```env
PARAMETER_PREFIXES=apisettings
FILTER_KEYS=Redis,MongoDB,PostgreSQL
```

## üìù **Logging e Debugging**
- Log detalhado de cada etapa do processamento
- Contagem de par√¢metros por filtro aplicado
- Identifica√ß√£o de par√¢metros encontrados por filtro
- Relat√≥rio final consolidado por regi√£o

## üéØ **Prompt Direto para Projetos Similares**

"Preciso de um analisador Python para AWS Parameter Store com:
- M√∫ltiplas regi√µes AWS
- 3 tipos de filtros: prefixo de nome, chaves espec√≠ficas, conte√∫do geral (LIKE)
- Exporta√ß√£o CSV consolidada com colunas din√¢micas
- Suporte a JSON e Properties nos valores
- Configura√ß√£o via .env
- Logging detalhado
- Tratamento de erros AWS

Estrutura de sa√≠da CSV:
- Modo filtrado: colunas por chave espec√≠fica
- Modo completo: coluna com valor integral
- Sempre incluir: Region, ParameterName, Type, LastModifiedDate, Version

Casos de uso: auditoria de seguran√ßa, mapeamento de URLs, invent√°rio de bancos, an√°lise de configura√ß√µes."

## üîÑ **Padr√µes de Evolu√ß√£o**
- Adicionar novos tipos de filtros conforme necessidade
- Expandir formatos de parsing (YAML, XML, etc.)
- Implementar filtros combinados (AND/OR)
- Adicionar exporta√ß√£o para outros formatos (JSON, Excel)
- Implementar cache para otimiza√ß√£o de performance
